// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  Int       @id @default(autoincrement())
  etsyUserId          String    @unique
  email               String    @unique
  firstName           String?
  lastName            String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  shop                Shop?
  stripeCustomerId    String?   @unique
  stripeSubscriptionId String?   @unique
  stripePriceId       String?
  stripeCurrentPeriodEnd DateTime?
}

model Shop {
  id                  Int      @id @default(autoincrement())
  etsyShopId          String   @unique
  shopName            String
  userId              Int      @unique
  user                User     @relation(fields: [userId], references: [id])
  accessToken         String
  refreshToken        String
  tokenExpiresAt      DateTime
  lastSync            DateTime?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  products            Product[]
  transactions        Transaction[]
}

model Product {
  id            Int      @id @default(autoincrement())
  etsyListingId String   @unique
  shopId        Int
  shop          Shop     @relation(fields: [shopId], references: [id])
  title         String
  sku           String?
  price         Float
  materialCost  Float?
  laborCost     Float?
  otherCost     Float?
  totalCogs     Float?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  transactions  Transaction[]
}

model Transaction {
  id              Int      @id @default(autoincrement())
  etsyTransactionId String @unique
  shopId          Int
  shop            Shop     @relation(fields: [shopId], references: [id])
  productId       Int
  product         Product  @relation(fields: [productId], references: [id])
  quantity        Int
  price           Float
  shippingCost    Float
  etsyFees        Float
  netProfit       Float
  transactionDate DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
